!pip install -q ultralytics
from ultralytics import YOLO

import cv2
import numpy as np
from base64 import b64decode
import PIL.Image
import io
from IPython.display import Javascript, display, Image
from google.colab.output import eval_js


def js_to_image(js_reply):
    image_bytes = b64decode(js_reply.split(',')[1])
    jpg_as_np = np.frombuffer(image_bytes, dtype=np.uint8)
    img = cv2.imdecode(jpg_as_np, flags=1)
    return img

def take_photo(filename='photo.jpg', quality=0.8):
    js = Javascript('''
      async function takePhoto(quality) {
        const div = document.createElement('div');
        const capture = document.createElement('button');
        capture.textContent = 'Capture';
        div.appendChild(capture);

        const video = document.createElement('video');
        video.style.display = 'block';
        const stream = await navigator.mediaDevices.getUserMedia({video: true});

        document.body.appendChild(div);
        div.appendChild(video);
        video.srcObject = stream;
        await video.play();

        google.colab.output.setIframeHeight(document.documentElement.scrollHeight, true);
        await new Promise((resolve) => capture.onclick = resolve);

        const canvas = document.createElement('canvas');
        canvas.width = video.videoWidth;
        canvas.height = video.videoHeight;
        canvas.getContext('2d').drawImage(video, 0, 0);
        stream.getVideoTracks()[0].stop();
        div.remove();
        return canvas.toDataURL('image/jpeg', quality);
      }
    ''')
    display(js)
    data = eval_js('takePhoto({})'.format(quality))
    img = js_to_image(data)
    cv2.imwrite(filename, img)
    return filename, img


model = YOLO("yolov8n.pt")

def detect_faces_yolo(img):
    results = model(img)
    detections = results[0].boxes.xyxy.cpu().numpy()  # x1, y1, x2, y2
    for (x1, y1, x2, y2) in detections:
        x1, y1, x2, y2 = map(int, (x1, y1, x2, y2))
        cv2.rectangle(img, (x1, y1), (x2, y2), (0, 255, 0), 2)
    return img, len(detections)


try:
    filename, img = take_photo('photo.jpg')
    print("Captured image:", filename)

    detected_img, face_count = detect_faces_yolo(img)
    cv2.imwrite(filename, detected_img)

    print(f"Detected {face_count} face(s)")
    display(Image(filename))
except Exception as e:
    print("Error:", str(e))

